import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
// import App from './components/app/app';

interface UserData {
  name: string;
  surname: string;
  link: string;
}
const userData: UserData = { name: 'John', surname: 'Ivanov', link: 'facebook.com' };
const userData2: UserData = { name: 'Ron', surname: 'Petrov', link: 'facebook.com' };
const userData3: UserData = { name: 'Shon', surname: 'Sidorov', link: 'facebook.com' };

const WhoAmI: React.FC<UserData> = ({ name, surname, link }) => (
  <>
    <h1>
      My name is {name}, surname - {surname}
    </h1>
    <a href={link}>{link}</a>
  </>
);

const All: React.FC = () => (
  <>
    <WhoAmI name={userData.name} surname={userData.surname} link={userData.link} />
    <WhoAmI name={userData2.name} surname={userData2.surname} link={userData2.link} />
    <WhoAmI name={userData3.name} surname={userData3.surname} link={userData3.link} />
  </>
);

ReactDOM.render(
  <React.StrictMode>
    <All />
  </React.StrictMode>,
  document.getElementById('root')
);

==========================FIRST VAR STATE BIND (see "nextYear" function)===========
import React, { PureComponent, ReactElement } from 'react';
import ReactDOM from 'react-dom';
import './index.css';
// import App from './components/app/app';
interface UserData {
  name: string;
  surname: string;
  link: string;
}

type MyState = {
  years: number;
};

class WhoAmI extends PureComponent<UserData, MyState> {
  constructor(props: UserData) {
    super(props);
    this.state = {
      years: 26,
    };
    this.nextYear = this.nextYear.bind(this);
  }

  nextYear(): void {
    this.setState((prevState) => ({ years: prevState.years + 1 }));
  }

  render(): ReactElement {
    const { name, surname, link } = this.props;
    const { years } = this.state;
    return (
      <>
        <button onClick={this.nextYear}>++</button>
        <h1>
          My name is {name}, surname - {surname}, years - {years}
        </h1>
        <a href={link}>{link}</a>
      </>
    );
  }
}

const All: React.FC = () => (
  <>
    <WhoAmI name="Luba" surname="NNNN" link="site.com" />
    <WhoAmI name="Nina" surname="PPPP" link="site.com" />
    <WhoAmI name="Anna" surname="FFFF" link="site.com" />
  </>
);

ReactDOM.render(
  <React.StrictMode>
    <All />
  </React.StrictMode>,
  document.getElementById('root')
);

======================SECOND VAR STATE BIND (see "nextYear" function)==========
import React, { PureComponent, ReactElement } from 'react';
import ReactDOM from 'react-dom';
import './index.css';
// import App from './components/app/app';
interface UserData {
  name: string;
  surname: string;
  link: string;
}

type MyState = {
  years: number;
};

class WhoAmI extends PureComponent<UserData, MyState> {
  nextYear: () => void;

  constructor(props: UserData) {
    super(props);
    this.state = {
      years: 26,
    };
    this.nextYear = (): void => {
      this.setState((prevState) => ({ years: prevState.years + 1 }));
    };
  }

  /*   nextYear(): void {
    this.setState((prevState) => ({ years: prevState.years + 1 }));
  } */

  render(): ReactElement {
    const { name, surname, link } = this.props;
    const { years } = this.state;
    return (
      <>
        <button onClick={this.nextYear}>++</button>
        <h1>
          My name is {name}, surname - {surname}, years - {years}
        </h1>
        <a href={link}>{link}</a>
      </>
    );
  }
}

const All: React.FC = () => (
  <>
    <WhoAmI name="Luba" surname="NNNN" link="site.com" />
    <WhoAmI name="Nina" surname="PPPP" link="site.com" />
    <WhoAmI name="Anna" surname="FFFF" link="site.com" />
  </>
);

ReactDOM.render(
  <React.StrictMode>
    <All />
  </React.StrictMode>,
  document.getElementById('root')
);

=====================THIRD VAR STATE BIND (see "nextYear" function)==========
import React, { PureComponent, ReactElement } from 'react';
import ReactDOM from 'react-dom';
import './index.css';
// import App from './components/app/app';
interface UserData {
  name: string;
  surname: string;
  link: string;
}

type MyState = {
  years: number;
};

class WhoAmI extends PureComponent<UserData, MyState> {
  constructor(props: UserData) {
    super(props);
    this.state = {
      years: 26,
    };
  }

  nextYear = (): void => {
    this.setState((prevState) => ({ years: prevState.years + 1 }));
  };

  render(): ReactElement {
    const { name, surname, link } = this.props;
    const { years } = this.state;
    return (
      <>
        <button onClick={this.nextYear}>++</button>
        <h1>
          My name is {name}, surname - {surname}, years - {years}
        </h1>
        <a href={link}>{link}</a>
      </>
    );
  }
}

const All: React.FC = () => (
  <>
    <WhoAmI name="Luba" surname="NNNN" link="site.com" />
    <WhoAmI name="Nina" surname="PPPP" link="site.com" />
    <WhoAmI name="Anna" surname="FFFF" link="site.com" />
  </>
);

ReactDOM.render(
  <React.StrictMode>
    <All />
  </React.StrictMode>,
  document.getElementById('root')
);